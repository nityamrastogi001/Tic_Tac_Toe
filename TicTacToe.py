# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I5GOwoy3iBHpoBoLXkSmKYdjEj83i42F
"""

from IPython.display import clear_output

def display_board(board):
    print("\n"*100)
    print("   |     |   ")
    print(board[1]+"  |  "+board[2]+"  |  "+board[3])
    print("   |     |   ")
    print("--------------")
    print("   |     |   ")
    print(board[4]+"  |  "+board[5]+"  |  "+board[6])
    print("   |     |   ")
    print("--------------")
    print("   |     |   ")
    print(board[7]+"  |  "+board[8]+"  |  "+board[9])
    print("   |     |   ")

    
def player_input():
  marker1=""
  global player1
  global player2
  player1=""
  player2=""
  while marker1!='X' and marker1!='O':
    marker1 = input("Please select either X or O for Player 1 ")
    if marker1 == 'X':
      player1 = 'X'
      player2 = 'O'
    else:
      player1 = 'O'
      player2 = 'X'
 
def place_marker(board, marker, position):
  board[position] = marker
  
def win_check(board, mark):
    for i in range(1,4):
      if board[i]==mark and board[i]==board[i+3] and board[i]==board[i+6]:
        return True
    for i in range(1,9,3):
      if board[i]== mark and board[i]==board[i+1] and board[i]==board[i+2]:
        return True
    if board[1] == mark and board[1]==board[5] and board[1]==board[9]:
      return True
    if board[3] == mark and board[3] == board[5] and board[3] == board[7]:
      return True
    return False
  
from random import randint

def choose_first():
    num = randint(1,2)
    if num == 1:
      print("Player 1 will go first")
    else:
      print("Player 2 will go first")
    return num
  
def space_check(board, position):
    
    if board[position]=='X' or board[position]=='O':
      return False
    return True
  
def full_board_check(board):
    
    for i in range(1,10):
      if board[i]!='X' and board[i]!='O':
        return False
    return True
  
def player_choice(board):
    position = int(input("Enter the position where you want to place marker "))
    if space_check(board, position):
      return position
    else:
      print("Position not free")
      position = player_choice(board)
      return position
    
def replay():
    
    ans = ""
    while(ans!="Yes" and ans!="No"):
      ans = input("Do you want to play again? Yes or No ")
      if ans == "Yes":
        return True
      if ans == "No":
        return False
      
board = [" " for i in range(1,11)]
num = 0
def Tic_Tac_Toe():
  global board
  board = [" " for i in range(1,11)]

  while True:
      
      display_board(board)
      player_input()
      num = choose_first()
      while not full_board_check(board):
          position = player_choice(board)
          if num == 1:
            mark = player1
            num=2
          else:
            mark = player2
            num = 1
          
          place_marker(board,mark,position)
          if win_check(board , player1):
            display_board(board)
            print("Player1 has won")
            break;
          elif win_check(board , player2):
            display_board(board)
            print("Player2 has won")            
            break;
          display_board(board)
       
      if replay(): 
        Tic_Tac_Toe()
      else:
        break
print('Welcome to Tic Tac Toe!')

Tic_Tac_Toe()

